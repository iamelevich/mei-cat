---
description:
globs:
alwaysApply: true
---
This project is organized as a monorepo with the following main folders:
`client/`: Contains the frontend application, built with TypeScript and React.
  `src/`: Source code for the frontend.
    `components/`: React components for the UI
    `shared/`: Shared logic and stores
    Other files: Entry points, styles, and environment types.
  `public/`: Static assets served by the frontend.
  Configuration files for build tools and TypeScript.
`server/`: Contains the backend application, written in TypeScript.
  `src/`: Source code for the backend.
    `db/`: Database models and schema definitions.
    `routes/`: API route handlers.
    Other files: Main app entry, environment config, and exports.
  Configuration files for build tools and TypeScript.
`libs/`: Shared libraries and tools.
  `mei-transformer/`: A library for MEI (Music Encoding Initiative) transformations.
    `src/`: Source code for MEI to JSON conversion.
    `encoding-tools/`: Tools and scripts for various MEI and music encoding format conversions, organized by subfolder. This is git submodule
    `files/`: (Purpose inferred as data or test files for the transformer.)
    Other files: Library entry point and documentation.
`docker/`: Contains Docker-related configuration, such as docker-compose.yml.
`.github/`, `.vscode/`, `.cursor/`: Project configuration for GitHub, VSCode, and Cursor.
`node_modules/`, `.turbo/`: Dependency and build system folders (auto-generated).
Root-level config files: Project-wide configuration for Bun, TypeScript, TurboRepo, etc.